一、将用户上传的图片在前台进行展示：
1.在setting.py中设置 MEDIA_URL='/media/'
2.在HTML页面中：{{ MEDIA_URL }}{{ org.image }}
3.在setting.py->'context_processors'=[..., 'django.template.context_processors.media'],不然无法对{{ MEDIA_URL }}进行解析
4.在setting.py中设置 MEDIA_ROOT=os.path.join(BASE_DIR, 'media')
5.在urls.py中：url(r'^media/(?P<path>.*)$', serve, {"document_root": MEDIA_ROOT})

二、列表分页功能：
在前台从后台取数据的时候：{% for org in all_orgs.object_list %}
https://github.com/jamespacileo/django-pure-pagination

三、列表筛选功能：
多层筛选功能：通过URL地址的形式给View传参数，并且从View返回已知参数
<a href="?city={{ city.id }}&ct={{ category }}&sort={{ sort }}"> <span class="{% ifequal city_id city.id|stringformat:"i" %}active2{% endifequal %}">{{ city.name }}</span></a>

四、使用ModelForm
使用ModelForm来避免在form.py中定义的字段与Model.py中重复。Example:
class UserAskForm(forms.ModelForm):
    class Meta:
        model = UserAsk
        fields = ['name', 'mobile', 'course_name']

    def clean_name(self): # 函数名必须是clean_+fieldname
        """
        验证手机号码是否合法
        """
        mobile = self.cleaned_data['mobile']
        # 正则验证步骤
        REGEX_MOBILE = "^1[358]\d{9}$|^147\d{8}$|^176\d{8}$"
        p =re.compile(REGEX_MOBILE)
        if p.match(mobile):
            return mobile
        else:
            # 自定义错误信息
            raise forms.ValidationError("手机号码非法", code="mobile_invalid")

五、配置多级URLS：
Step1: MXOnline/urls.py: url(r'^org/', include('organization.urls', namespace="org"))
Step2: MXOnline/apps/organization/urls.py: url(r'^org_home/(?P<org_id>\d+)/$', OrgHomeView.as_view(), name="org_home")
注意：可以通过在URL中配置参数的方法向后台传数据

六、外键关联查询
# 根据Course中的外键course_org反向获取
all_courses = course_org.course_set.all()